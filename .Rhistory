pollutantmean
pollutantmean <- function(directory) {
setwd(directory)
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.tablecsv(file)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
pollutantmean("specdata")
v
v<-1:10
source('D:/Anita/Coursera/R Programming/makeVector.R')
makeVector(v)
undebug(ls)
makeVector(n)
quit
exit
Q
q()
packages()
install.packages("Rjava")
install.packages("rJava")
library(xlsx)
library(rJava)
library(rJava)
library(xlsx)
quit
library(datasets)
head(airquality)
airquality<-transform(airquality,Month=factor(Month))
head(airquality)
?transform
xyplot(Ozone~Wind|Month,airquality)
library(ggplot2)
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(Diet)
?trellis.par.set
?text()
?lines()
?lpoints()
library(datasets)
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom()
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
?points()
quit
exit
myapp <- oauth_app("github",
key = "815866f414d6eaaa0112",
secret = "7d85b880f7bca21700ea10387ab4339aa9cc9915")
library(httr)
install.packages(httr)
?packageName
quit
setwd("c:\\Users\Manav\Coursera\RepData_PeerAssessment1")
setwd("c:\\Users\\Manav\\Coursera\\RepData_PeerAssessment1")
df<-read.csv(".\\activity\\activity.csv")
head(df)
describe(df)
desc(df)
summary(df)
weekday(df[1,2])
weekdays(df[1,2])
weekdays(as.Date(df[1,2]))
source('C:/Anita/Coursera Videos/Reproducible research/PeerAssess11.R')
source('C:/Anita/Coursera Videos/Reproducible research/PeerAssess11.R')
head(df)
summary(df)
source('C:/Anita/Coursera Videos/Reproducible research/PeerAssess11.R')
dates
source('C:/Anita/Coursera Videos/Reproducible research/PeerAssess11.R')
dates
?summarise
summarise_each()
summarise_each()
?summarise_each
dfSums<-summarise(dates,sum=sum(steps))
dfSums
dfSums<-summarise(dates,sum=sum(steps),na.rm=TRUE)
dfSums
dfSums<-summarise(dates,(sum=sum(steps),na.rm=TRUE))
round(mean(dfSums$sum),digits=0)
round(median(dfSums$sum),digits=0)
with(dfSums,histS(sum()))
with(dfSums,hist(sum()))
with(dfSums,hist(sum()))
dfSums
dfSums<-summarise(dates,sum=sum(steps))
dfSums
hist(dfSums$sum)
with(dfSums,hist(sum))
df$interval<-factor(df$interval,levels=unique(df$interval),
labels=as.character(unique(df$interval)))
intervals=group_by(df_trunc,interval)
df1<-summarise(intervals,mean=mean(steps))
plot(df1, type = "l", xlab = "intervals", main = "", ylab = "")
points(df1, pch = 20, col = "Red")
df1[which(df1[,'mean'] == max(df1$mean)),1 ]
summary(df)
dfMeans<-summarise(intervals,mean=mean(steps))
plot(dfMeans, type = "l", xlab = "intervals", main = "Average Daily Activity pattern", ylab = "Average number of steps")
points(dfMeans, pch = 20, col = "Red")
head(df)
head(df,100)
x <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
y<-c("Saturday","Sunday")
df$day <- ifelse(weekdays(df$date) in x, "Weekday"", ifelse(weekdays(df$date) in y, weekend"))
df$day <- ifelse(weekdays(df$date) == x[1]:x[5], "Weekday"", ifelse(weekdays(df$date) in y, weekend"))
df$day <- ifelse(weekdays(df$date) in x, "Weekday", ifelse(weekdays(df$date) in y, "weekend"))
df$day <- ifelse(weekdays(df$date) == x[1], "Weekday", ifelse(weekdays(df$date) == y[1], "weekend"))
df$day <- ifelse(weekdays(as.Date(df$date)) == x[1], "Weekday", ifelse(weekdays(as.Date(df$date)) == y[1], "weekend"))
df$day <- ifelse(weekdays(as.Date(df$date)) == x[1], "Weekday", ifelse(weekdays(as.Date(df$date)) == y[1], "weekend",NA))
head(df)
df$day <- ifelse(weekdays(as.Date(df$date)) == x[1], "Weekday",
ifelse(weekdays(as.Date(df$date)) == x[2], "Weekday",
ifelse(weekdays(as.Date(df$date)) == x[3], "Weekday",
ifelse(weekdays(as.Date(df$date)) == x[4], "Weekday",
ifelse(weekdays(as.Date(df$date)) == x[5], "Weekday",
ifelse(weekdays(as.Date(df$date)) == y[1], "weekend",
ifelse(weekdays(as.Date(df$date)) == y[2], "weekend",
NA))
)
)
)
)
)
head(df)
df$day<-factor(df$day)
df
